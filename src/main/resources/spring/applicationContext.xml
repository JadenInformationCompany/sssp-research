<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
	default-autowire="byName">
	<!-- springIOC容器，托管所有需要托管的bean，除了springMVC容器托管的 -->
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.szhis.frsoft">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 配置数据源，引用外部属性文件 -->
	<context:property-placeholder location="classpath:property/db.properties" />

	<!-- 数据源1: mysql -->
	<bean id="dataSourceOne" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${dbOne.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${dbOne.jdbc.url}" />
		<property name="user" value="${dbOne.jdbc.user}" />
		<property name="password" value="${dbOne.jdbc.password}" />
		<property name="initialPoolSize" value="${dbOne.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${dbOne.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${dbOne.jdbc.maxPoolSize}" />
	</bean>

	<!-- 数据源2: mysql -->
	<bean id="dataSourceTwo" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${dbTwo.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${dbTwo.jdbc.url}" />
		<property name="user" value="${dbTwo.jdbc.user}" />
		<property name="password" value="${dbTwo.jdbc.password}" />
		<property name="initialPoolSize" value="${dbTwo.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${dbTwo.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${dbTwo.jdbc.maxPoolSize}" />
	</bean>

	<bean id="dynamicDataSource" class="com.szhis.frsoft.common.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSourceOne" value-ref="dataSourceOne"></entry>
				<entry key="dataSourceTwo" value-ref="dataSourceTwo"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceOne">
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 自动生成表，不建议使用 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 配置连接的数据库:mysql,sqlServer,oracle -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
			</props>
		</property>
		<!-- 扫描hibernate注解配置的entity -->
		<property name="packagesToScan">
			<list>
				<value>com.szhis.frsoft.entity</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<!-- 同一种数据库只需要配置一个sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 定义aop事务传播属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- add,update,delete传播方式 -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<!-- 查询传播方式 -->
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 开启aop注解的支持 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>
