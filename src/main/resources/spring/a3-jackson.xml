<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	<!-- springIOC容器，托管所有需要托管的bean，除了springMVC容器托管的 -->
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.szhis.frsoft">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 配置数据源，引用外部属性文件 -->
	<context:property-placeholder location="classpath:property/db.properties" />

	<!-- 配置连接池（数据源），引用外部属性文件 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${dbOne.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${dbOne.jdbc.url}" />
		<property name="user" value="${dbOne.jdbc.user}" />
		<property name="password" value="${dbOne.jdbc.password}" />
		<property name="initialPoolSize" value="${dbOne.jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${dbOne.jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${dbOne.jdbc.maxPoolSize}" />
	</bean>

	<!-- 配置 JPA 的 EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置orm实现者:hibernate,mybatis -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<!-- 扫描jpa需要持久化的entity -->
		<property name="packagesToScan" value="com.szhis.frsoft.entity"></property>
		<property name="jpaProperties">
			<props>
				<!-- 自动生成表，不建议使用 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 配置连接的数据库:mysql,sqlServer,oracle -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
			</props>
		</property>
		<!-- 配置使用二级缓存的模式：只允许带有 @Cacheable 的类使用二级缓存 -->
		<property name="sharedCacheMode" value="ENABLE_SELECTIVE"></property>
	</bean>

	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>

	<!-- 配置支持基于注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置 SpringData,启用扫描并自动创建代理的功能 -->
	<jpa:repositories base-package="com.szhis.frsoft.repository"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory">
	</jpa:repositories>

	<!-- 处理jackson序列化hibernate懒加载问题 -->
	<!-- Jackson Mapper -->
	<bean id="jsonMapper" class="com.szhis.frsoft.common.mapper.jackson.JsonMapper">
		<constructor-arg type="javax.persistence.EntityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter"
		lazy-init="true">
		<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
		<constructor-arg value="UTF-8" />
	</bean>
	<bean id="jackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
		lazy-init="true">
		<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
		<property name="prettyPrint" value="true" />
		<property name="objectMapper" ref="jsonMapper" />
	</bean>
	<!-- 需要在xml头中加入schema util -->
	<util:list id="messageConverters">
		<ref bean="stringHttpMessageConverter" />
		<ref bean="jackson2HttpMessageConverter" />
	</util:list>
	<!-- restTemplate -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"
		lazy-init="true">
		<constructor-arg ref="messageConverters" />
		<property name="requestFactory">
			<bean
				class="org.springframework.http.client.SimpleClientHttpRequestFactory">
				<property name="readTimeout" value="15000" />
				<property name="connectTimeout" value="15000" />
			</bean>
		</property>
		<property name="errorHandler">
			<bean class="org.springframework.web.client.DefaultResponseErrorHandler"></bean>
		</property>
	</bean>

</beans>
